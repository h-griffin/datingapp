{"version":3,"sources":["./src/app/members/member-messages/member-messages.component.css","./src/app/register/register.component.css","./src/app/errors/test-errors/test-errors.component.ts","./src/app/_forms/date-input/date-input.component.ts","./src/app/register/register.component.ts","./src/app/_forms/text-input/text-input.component.css","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/admin/photo-management/photo-management.component.ts","./src/app/errors/not-found/not-found.component.ts","./src/app/_services/account.service.ts","./src/app/errors/not-found/not-found.component.css","./src/app/errors/server-error/server-error.component.ts","./src/app/_directives/has-role.directive.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.ts","./src/app/app.component.css","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/_interceptors/jwt.interceptor.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/app/modals/confirm-dialogue/confirm-dialogue.component.html","./src/app/messages/messages.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/admin/user-management/user-management.component.html","./src/app/errors/test-errors/test-errors.component.css","./src/app/admin/photo-management/photo-management.component.html","./src/app/home/home.component.html","./src/app/admin/photo-management/photo-management.component.css","./src/app/errors/test-errors/test-errors.component.html","./src/app/lists/lists.component.html","./src/app/modals/confirm-dialogue/confirm-dialogue.component.css","./src/app/_interceptors/error.interceptor.ts","./src/app/errors/server-error/server-error.component.html","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/register/register.component.html","./src/app/admin/user-management/user-management.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/messages/messages.component.css","./src/app/members/member-detail/member-detail.component.ts","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/errors/server-error/server-error.component.css","./src/app/home/home.component.css","./src/app/members/member-list/member-list.component.ts","./src/app/nav/nav.component.css","./src/app/members/member-edit/member-edit.component.html","./src/app/app.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/members/member-edit/member-edit.component.css","./src/app/_forms/date-input/date-input.component.css","./src/app/members/member-card/member-card.component.html","./src/app/members/member-detail/member-detail.component.css","./src/app/members/member-list/member-list.component.css","./src/app/_interceptors/loading.interceptor.ts","./src/app/app.component.html","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/members/photo-editor/photo-editor.component.css","./src/$_lazy_route_resource lazy namespace object","./src/app/modals/confirm-dialogue/confirm-dialogue.component.ts","./src/app/modals/roles-modal/roles-modal.component.css","./src/app/_forms/text-input/text-input.component.ts","./src/app/lists/lists.component.ts","./src/app/admin/admin-panel/admin-panel.component.css","./src/app/_module/shared.module.ts","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/_services/presence.service.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/_models/userParams.ts","./src/app/admin/user-management/user-management.component.css","./src/app/members/member-card/member-card.component.css","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/messages/messages.component.html","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/_services/paginationHelper.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/main.ts","./src/app/lists/lists.component.css"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \".card{\\n  border: none;\\n}\\n\\n.chat{\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.chat li{\\n  margin-bottom: 10px;\\n  padding-bottom: 10px;\\n  border-bottom: 1px dotted #B3A9A9;\\n}\\n\\n.rounded-circle{\\n  max-height: 50px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9tZW1iZXItbWVzc2FnZXMvbWVtYmVyLW1lc3NhZ2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsU0FBUztFQUNULFVBQVU7QUFDWjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixvQkFBb0I7RUFDcEIsaUNBQWlDO0FBQ25DOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbWVtYmVycy9tZW1iZXItbWVzc2FnZXMvbWVtYmVyLW1lc3NhZ2VzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZHtcbiAgYm9yZGVyOiBub25lO1xufVxuXG4uY2hhdHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uY2hhdCBsaXtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQgI0IzQTlBOTtcbn1cblxuLnJvdW5kZWQtY2lyY2xle1xuICBtYXgtaGVpZ2h0OiA1MHB4O1xufVxuIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css']\n})\nexport class TestErrorsComponent implements OnInit {\n  baseUrl = environment.apiUrl;\n  validationErrors: string[] = []; // display text error on page\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  get404Error(){\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response => {\n      console.log('[test-errors.component.ts] get404Error()', response);\n    }, error => {\n      console.log('[test-errors.component.ts] get404Error()', error);\n    })\n  }\n\n  get400Error(){\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response => {\n      console.log('[test-errors.component.ts] get400Error()', response);\n    }, error => {\n      console.log('[test-errors.component.ts] get400Error()', error);\n    })\n  }\n\n  get500Error(){\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response => {\n      console.log('[test-errors.component.ts] get500Error()', response);\n    }, error => {\n      console.log('[test-errors.component.ts] get500Error()', error);\n    })\n  }\n\n  get401Error(){\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(response => {\n      console.log('[test-errors.component.ts] get401Error()', response);\n    }, error => {\n      console.log('[test-errors.component.ts] get401Error()', error);\n    })\n  }\n\n  get400ValidationError(){\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(response => {\n      console.log('[test-errors.component.ts] get400ValidationError()', response);\n    }, error => {\n      console.log('[test-errors.component.ts] get400ValidationError()', error);\n      this.validationErrors = error;\n    })\n  }\n}\n","import { Input, Self } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css']\n})\nexport class DateInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() maxDate: Date;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-red',\n      dateInputFormat: 'DD MMMM YYYY'\n    }\n  }\n\n  writeValue(obj: any): void {\n\n  }\n  registerOnChange(fn: any): void {\n\n  }\n  registerOnTouched(fn: any): void {\n\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  registerForm: FormGroup;\n  maxDate: Date;\n  validationErrors: string[] = [];\n\n  constructor(private accountService: AccountService,\n    private router: Router,\n    private toastr: ToastrService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.maxDate = new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear() -18); //18+ bday on sign up\n  }\n\n  initializeForm(){\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', [Validators.required, this.matchValues('password')]]\n    })\n\n    // change password after pw confirm\n    this.registerForm.controls.password.valueChanges.subscribe(() => {\n      this.registerForm.controls.confirmPassword.updateValueAndValidity();\n    })\n  }\n\n  matchValues(matchTo: string): ValidatorFn{\n    return (control: AbstractControl) =>{\n      return control?.value === control?.parent?.controls[matchTo].value ? null : {isMatching: true}\n    }\n  }\n\n  // register user then hide form\n  register(){\n    this.accountService.register(this.registerForm.value).subscribe(response =>{\n      this.router.navigateByUrl('/members');\n    }, error => {\n      console.log(\"[register.component.ts] register() validation error\",error);\n      this.validationErrors = error;\n    })\n  }\n\n  cancel(){\n    console.log(\"[register.component.ts] form cancelled\");\n    this.cancelRegister.emit('false');\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19mb3Jtcy90ZXh0LWlucHV0L3RleHQtaW5wdXQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<h2>Admin Panel</h2>\\n\\n<div class=\\\"tab-panel\\\">\\n  <tabset class=\\\"member-tabset\\\" >\\n    <tab heading=\\\"User Management\\\" *appHasRole='[\\\"Admin\\\"]' >\\n      <div class=\\\"container\\\">\\n        <app-user-management></app-user-management>\\n      </div>\\n    </tab>\\n\\n    <tab heading=\\\"Photo Management\\\" *appHasRole='[\\\"Admin\\\", \\\"Moderator\\\"]' >\\n      <div class=\\\"container\\\">\\n        <app-photo-management></app-photo-management>\\n      </div>\\n    </tab>\\n\\n  </tabset>\\n</div>\\n\\n\\n\";","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Message } from 'src/app/_models/message';\nimport { MessageService } from 'src/app/_services/message.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @ViewChild(\"messageForm\") messageFrom: NgForm\n  @Input() messages: Message[];\n  @Input() username: string; // get from member detail\n  messageContent: string;\n\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit(): void {\n  }\n\n  sendMessage(){\n    this.messageService.sendMessage(this.username, this.messageContent).then(() => {\n      this.messageFrom.reset()     // clear text\n    })\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Photo } from 'src/app/_models/photo';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  photos: Photo[];\n  constructor(private adminService: AdminService) { }\n\n  ngOnInit(): void {\n  }\n\n  getPhotosForApproval(){\n    this.adminService.getPhotosForApproval().subscribe(photos => {\n      this.photos = photos;\n    })\n  }\n\n  approvePhoto(photoId){\n    this.adminService.approvePhoto(photoId).subscribe(() => {\n      this.photos.splice(this.photos.findIndex(p => p.id === photoId), 1);\n    })\n  }\n\n  rejectPhoto(photoId){\n    this.adminService.rejectPhoto(photoId).subscribe(() => {\n      this.photos.splice(this.photos.findIndex(p => p.id === photoId), 1);\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\nimport { PresenceService } from './presence.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl;\n\n  // observable to store user in\n  private currentUserSource = new ReplaySubject<User>(1); // so other components can observe (auth guard subscribes)\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient, private presence: PresenceService) { }\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    )\n  }\n\n  register(model: any) {\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\n      map((user: User) => {\n        if (user) {\n         this.setCurrentUser(user);\n         this.presence.createHubConnection(user);\n        }\n      })\n    )\n  }\n\n  setCurrentUser(user: User) {\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  logout(){\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.presence.stopHubConnection();\n  }\n\n  // roles located in token\n  getDecodedToken(token){\n    // string of 3 [0,1,2] header, payload, signature // payload [1]\n    return JSON.parse(atob(token.split(\".\")[1]))\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9ycy9ub3QtZm91bmQvbm90LWZvdW5kLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error; // optional cahining incase user inst rerouted\n    \n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Directive({\n  selector: '[appHasRole]' // *appHasRole='[\"Admin\"]'\n})\nexport class HasRoleDirective implements OnInit{\n  @Input() appHasRole: string[];\n  user: User;\n\n  constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>, private accountService: AccountService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n    })\n   }\n\n  ngOnInit(): void {\n    // clear view/container if on roles\n    if (!this.user?.roles || this.user == null){\n      this.viewContainerRef.clear();\n      return;\n    }\n\n    // if user has a role in list, create embeded view and use admin link as template ref\n    if (this.user?.roles.some(r => this.appHasRole.includes(r))){\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainerRef.clear();\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\n  busyRequestCount = 0;  // counts how many requests are in process\n\n  constructor( private spinnerService: NgxSpinnerService) { }\n\n  busy(){\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type: \"line-scale-party\",\n      bdColor: \"rgba(255,255,255,0)\",\n      color: \"#333333\"\n    });\n  }\n\n  idle(){\n    this.busyRequestCount--;\n    if (this.busyRequestCount <= 0 ){\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n\n  constructor() { }\n\n  ngOnInit() {\n   }\n\n  registerToggle(){\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(event: boolean){\n    this.registerMode = event; // stop displaying register form\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","export interface Pagination {\n  currentPage : number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPAges: number;\n }\n\n// PaginatedResult<Members[]>  array of members\n export class PaginatedResult<T>{\n  result: T;\n  pagination: Pagination;\n  }\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:5001/api/',\n  hubUrl: 'https://localhost:5001/hubs/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n\\n    <div *ngIf=\\\"(messageService.messageThread$ | async)?.length === 0\\\" >\\n      No messages yet... say hi by using the message box below\\n    </div>\\n\\n    <ul\\n      #scrollMe\\n      style=\\\"overflow: scroll; height: 500px;\\\"\\n      [scrollTop]=\\\"scrollMe.scrollHeight\\\"\\n      *ngIf=\\\"(messageService.messageThread$ | async)?.length > 0\\\"\\n      class=\\\"chat\\\"\\n      >\\n\\n      <li *ngFor=\\\"let message of (messageService.messageThread$ | async)\\\" >\\n\\n        <div *ngIf=\\\"message.senderUsername == username\\\">\\n          <span  class=\\\"chat-img float-left mr-3\\\">\\n            <img class=\\\"rounded-circle\\\" src=\\\"{{message.senderPhotoUrl || './assets/user.png'}}\\\" alt=\\\"{{message.senderUsername}}\\\">\\n          </span>\\n\\n          <div class=\\\"chat-body\\\" >\\n            <div class=\\\"header float-left\\\">\\n              <small class=\\\"text-muted\\\">\\n                <span class=\\\"fa fa-clock-o\\\">  {{message.messageSent | timeago}}</span>\\n                <span class=\\\"text-danger\\\" *ngIf=\\\"!message.dateRead\\n                  && message.senderUsername !== username\\\">\\n                   (unread)</span>\\n                <span class=\\\"text-success\\\" *ngIf=\\\"message.dateRead\\n                  && message.senderUsername !== username\\\">\\n                   (read {{message.dateRead | timeago}})</span>\\n              </small>\\n            </div>\\n            <br>\\n            <p>{{message.content}}</p>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"message.recipientUsername == username\\\">\\n          <span class=\\\"chat-img float-right ml-3\\\">\\n            <img class=\\\"rounded-circle\\\" src=\\\"{{message.senderPhotoUrl || './assets/user.png'}}\\\" alt=\\\"{{message.senderUsername}}\\\">\\n          </span>\\n\\n          <div class=\\\"chat-body\\\" >\\n            <div  class=\\\"header float-right\\\">\\n              <small class=\\\"text-muted\\\">\\n                <span class=\\\"fa fa-clock-o\\\">  {{message.messageSent | timeago}}</span>\\n                <span class=\\\"text-danger\\\" *ngIf=\\\"!message.dateRead\\n                  && message.senderUsername !== username\\\">\\n                   (unread)</span>\\n                <span class=\\\"text-success\\\" *ngIf=\\\"message.dateRead\\n                  && message.senderUsername !== username\\\">\\n                   (read {{message.dateRead | timeago}})</span>\\n              </small>\\n            </div>\\n            <br>\\n            <p style=\\\"text-align: right\\\">{{message.content}}</p>\\n          </div>\\n        </div>\\n\\n\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"card-footer\\\">\\n    <form #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"sendMessage()\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"input-group\\\">\\n\\n        <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Send a private message\\\"\\n          name=\\\"messageContent\\\"\\n          required\\n          [(ngModel)]=\\\"messageContent\\\"\\n          >\\n\\n        <div class=\\\"input-group-append\\\">\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\"\\n            [disabled]=\\\"!messageForm.valid\\\"\\n            >Send</button>\\n        </div>\\n\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService: AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentUser: User;\n\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\n    if(currentUser){\n      //clone request adn add authentication header\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      })\n    }\n\n    return next.handle(request);\n  }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\">Edit roles for {{user.username}}</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <form #rolesForm=\\\"ngForm\\\" id=\\\"rolesForm\\\" >\\n    <div class=\\\"form-check\\\" *ngFor=\\\"let role of roles\\\" >\\n      <input type=\\\"checkbox\\\"\\n        class=\\\"form-check-input\\\"\\n        [checked]=\\\"role.checked\\\"\\n        value=\\\"role.name\\\"\\n        (change)=\\\"role.checked = !role.checked\\\"\\n        [disabled]=\\\"role.name === 'Admin' && user.username === 'admin' \\\"\\n      >\\n      <label>{{role.name}}</label>\\n    </div>\\n  </form>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"bsModalRef.hide()\\\">Cancel</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateRoles()\\\">Submit</button>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\">{{title}}</h4>\\n\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <p>{{message}}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"confirm()\\\">{{btnOkText}}</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"decline()\\\">{{btnCancelText}}</button>\\n</div>\\n\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination } from '../_models/pagination';\nimport { ConfirmService } from '../_services/confirm.service';\nimport { MessageService } from '../_services/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[] = [];\n  pagination: Pagination;\n  container = \"Unread\";\n  pageNumber = 1;\n  pageSize = 5;\n  loading=false;\n\n\n\n  constructor(private messageService: MessageService, private confirmService: ConfirmService) { }\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    this.loading=true;\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container).subscribe(response => {\n      // response is paginated\n      this.messages = response.result;\n      this.pagination = response.pagination;\n      this.loading=false;\n    })\n  }\n\n  deleteMessage(id: number){\n    this.confirmService.confirm(\"Confirm delete message\", \"This cannot be undone\").subscribe(result => {\n      if(result){ //bool\n        this.messageService.deleteMessage(id).subscribe(() => {\n          this.messages.splice(this.messages.findIndex(m => m.id === id), 1); // (index/id, delete 1)\n        })\n      }\n    })\n\n  }\n\n  pageChanged(event: any){\n    this.pageNumber = event.page;\n    this.loadMessages();\n  }\n\n\n}\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-2 img-wrapper\\\" *ngFor=\\\"let photo of member.photos\\\">\\n      <img src=\\\"{{photo.url}}\\\" alt=\\\"{{photo.url}}\\\" class=\\\"img-thumbnail p-1\\\"\\n          [class.not-approved]=\\\"!photo.isApproved\\\"\\n      >\\n\\n      <div class=\\\"text-center img-text\\\" *ngIf=\\\"!photo.isApproved\\\">\\n          <span class=\\\"text-danger \\\">Awaiting approval</span>\\n      </div>\\n\\n      <div class=\\\"text-center\\\">\\n          <button\\n              [disabled]=\\\"photo.isMain || !photo.isApproved\\\"\\n              (click)=\\\"setMainPhoto(photo)\\\"\\n              [ngClass]='photo.isMain ? \\\"btn-success active\\\" : \\\"btn-outline-success\\\"'\\n              class=\\\"btn btn-sm \\\"\\n          >Main</button>\\n          &nbsp;\\n          <button\\n              [disabled]=\\\"photo.isMain\\\"\\n              (click)=\\\"deletePhoto(photo.id)\\\"\\n              class=\\\"btn btn-sm btn-danger\\\"\\n          ><i class=\\\"fa fa-trash\\\"></i></button>\\n      </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mt-3\\\">\\n\\n<div class=\\\"col-md-3\\\">\\n\\n    <h3>Add Photos</h3>\\n\\n    <div ng2FileDrop\\n          [ngClass]=\\\"{'nv-file-over': hasBaseDropzoneOver}\\\"\\n          (fileOver)=\\\"fileOverBase($event)\\\"\\n          [uploader]=\\\"uploader\\\"\\n          class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n          <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n        Drop Photos Here\\n    </div>\\n\\n    Multiple\\n    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\n\\n    Single\\n    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n</div>\\n\\n<div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n\\n    <h3>Upload queue</h3>\\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n    <table class=\\\"table\\\">\\n        <thead>\\n        <tr>\\n            <th width=\\\"50%\\\">Name</th>\\n            <th>Size</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let item of uploader.queue\\\">\\n            <td><strong>{{ item?.file?.name }}</strong></td>\\n            <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n        </tr>\\n        </tbody>\\n    </table>\\n\\n    <div>\\n        <div>\\n            Queue progress:\\n            <div class=\\\"progress\\\">\\n                <div class=\\\"progress-bar mb-3 mt-2\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n            </div>\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"btn btn-success btn-s mt-3 \\\"\\n                (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n            <span class=\\\"fa fa-upload\\\"></span> Upload all\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s mt-3 ml-3\\\"\\n                (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n            <span class=\\\"fa fa-ban\\\"></span> Cancel all\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s mt-3 ml-3\\\"\\n                (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n            <span class=\\\"fa fa-trash\\\"></span> Remove all\\n        </button>\\n    </div>\\n\\n</div>\\n\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n  <table class=\\\"table\\\">\\n    <tr>\\n      <th style=\\\"width: 30%;\\\" >UserName</th>\\n      <th style=\\\"width: 40%;\\\" >Active roles</th>\\n      <th style=\\\"width: 30%;\\\" ></th>\\n    </tr>\\n\\n    <tr *ngFor=\\\"let user of users\\\" >\\n      <td>{{user.username}}</td>\\n      <td>{{user.roles}}</td>\\n      <td><button (click)=\\\"openRolesModal(user)\\\" class=\\\"btn btn-info\\\">Edit Roles</button></td>\\n    </tr>\\n  </table>\\n</div>\\n\\n\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9ycy90ZXN0LWVycm9ycy90ZXN0LWVycm9ycy5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\" >\\n    <h4>{{photo.username}}</h4>\\n    <img src=\\\"{{photo.url}}\\\" alt=\\\"{{photo.username}}\\\" class=\\\"img-thumbnail p-1\\\">\\n\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-sm btn-success mr-1\\\" (click)=\\\"approvePhoto(photo.id)\\\" >Approve</button>\\n      <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"rejectPhoto(photo.id)\\\" >Reject</button>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\";","export default \"<div class=\\\"container mt-5\\\">\\n  <div style=\\\"text-align: center;\\\" *ngIf=\\\"!registerMode\\\">\\n    <h1>Find your match</h1>\\n    <p class=\\\"lead\\\">come on in to view your matches... all you need to do is sign up!</p>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\n      <button class=\\\"btn btn-info btn-lg\\\">Learn More</button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container\\\" *ngIf=\\\"registerMode\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-4\\\">\\n          <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\" ></app-register>\\n        </div>\\n      </div>\\n    </div>\\n</div>\\n\";","export default \"img.img-thumbnail{\\n  height: 150px;\\n  min-width: 150px !important;\\n  margin-bottom: 2px;\\n}\\n\\n\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcGhvdG8tbWFuYWdlbWVudC9waG90by1tYW5hZ2VtZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsMkJBQTJCO0VBQzNCLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3Bob3RvLW1hbmFnZW1lbnQvcGhvdG8tbWFuYWdlbWVudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW1nLmltZy10aHVtYm5haWx7XG4gIGhlaWdodDogMTUwcHg7XG4gIG1pbi13aWR0aDogMTUwcHggIWltcG9ydGFudDtcbiAgbWFyZ2luLWJvdHRvbTogMnB4O1xufVxuXG5cblxuXG5cbiJdfQ== */\";","export default \"<ng-container>\\n  <h1>open the console to see errors</h1>\\n  <p>right click to inspect page, then view console</p>\\n  <br>\\n  <button (click)=\\\"get500Error()\\\" class=\\\"btn btn-outline-primary mr-3\\\">Test 500 Error</button>\\n  <button (click)=\\\"get404Error()\\\" class=\\\"btn btn-outline-primary mr-3\\\">Test 404 Error</button>\\n  <button (click)=\\\"get401Error()\\\" class=\\\"btn btn-outline-primary mr-3\\\">Test 401 Error</button>\\n  <button (click)=\\\"get400Error()\\\" class=\\\"btn btn-outline-primary mr-3\\\">Test 400 Error</button>\\n  <button (click)=\\\"get400ValidationError()\\\" class=\\\"btn btn-outline-primary mr-3\\\">Test 400 Validation Error</button>\\n\\n  <div class=\\\"row mt-5\\\" *ngIf=\\\"validationErrors.length > 0\\\">\\n    <ul class=\\\"text-danger\\\">\\n      <li *ngFor=\\\"let error of validationErrors\\\">\\n        {{error}}\\n      </li>\\n    </ul>\\n  </div>\\n</ng-container>\\n\";","export default \"<div class=\\\"text-center mt-3\\\">\\n  <h2>{{predicate === 'liked' ? 'members i like' : 'members who like me'}}</h2>\\n</div>\\n\\n\\n<div class=\\\"container mt-3\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\" name=\\\"predicate\\\">\\n\\n      <button\\n        class=\\\"btn btn-primary\\\"\\n        btnRadio=\\\"liked\\\"\\n        [(ngModel)]=\\\"predicate\\\"\\n        (click)=\\\"loadLikes()\\\">\\n      Members I like</button>\\n\\n      <button\\n        class=\\\"btn btn-primary\\\"\\n        btnRadio=\\\"likedBy\\\"\\n        [(ngModel)]=\\\"predicate\\\"\\n        (click)=\\\"loadLikes()\\\">\\n      Members who like me</button>\\n\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row mt-3\\\">\\n    <div class=\\\"col-2\\\" *ngFor=\\\"let member of members\\\">\\n      <app-member-card [member]=\\\"member\\\" ></app-member-card>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"pagination\\\">\\n  <pagination\\n    [boundaryLinks]=\\\"true\\\"\\n    [totalItems]=\\\"pagination.totalItems\\\"\\n    [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n    [(ngModel)]=\\\"pagination.currentPage\\\"\\n    (pageChanged)=\\\"pageChanged($event)\\\"\\n\\n    previousText=\\\"&lsaquo;\\\"\\n    nextText=\\\"&rsaquo;\\\"\\n    firstText=\\\"&laquo;\\\"\\n    lastText=\\\"&raquo;\\\">\\n  </pagination>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9jb25maXJtLWRpYWxvZ3VlL2NvbmZpcm0tZGlhbG9ndWUuY29tcG9uZW50LmNzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error =>{\n        if (error) {\n          switch(error.status){\n            case 400:\n              if (error.error.errors){\n                const modalStateErrors = [];\n                for (const key in error.error.errors){\n                  if (error.error.errors[key]){\n                    modalStateErrors.push(error.error.errors[key]) // display errors in a flat list under sign up (no matrix array)\n                  }\n                }\n                throw modalStateErrors.flat();\n              }else if (typeof(error.error) === 'object'){\n                this.toastr.error(error.statusText, error.status);\n              }else{\n                // string\n                this.toastr.error(error.error, error.status);\n              }\n              break;\n            case 401:\n              this.toastr.error(error.statusText, error.status);\n              break;\n            case 404:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {state: {error: error.error}};\n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    )\n  }\n}\n","export default \"<h4>500 Internal Server Error - refreshing page will make the error disappear</h4>\\n\\n<ng-container *ngIf=\\\"error\\\">\\n  <h5 class=\\\"text-danger\\\">Error: {{error.message}}</h5>\\n  <p class=\\\"font-weight-bold\\\">note: if you are seeing this then Angular is probably not to blame</p>\\n  <p>what to do next></p>\\n  <ol>\\n    <li>open the chrome dev tools</li>\\n    <li>inspect the network tab</li>\\n    <li>check the failing request (in red)</li>\\n    <li>examine the request url - make sure this is correct (req diff/wrong server?)</li>\\n    <li>reproduce the error in postman - if we see same response, then the issue is not with Angular</li>\\n  </ol>\\n  <p>following is the stak trace - this is where your investigation should start</p>\\n  <code class=\\\"mt-5\\\" style=\\\"background-color: whitesmoke;\\\">{{error.details}}</code>\\n</ng-container>\\n\\n\\n\";","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private accountService: AccountService, private toastr: ToastrService) {}\n\n  canActivate( ): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if(user.roles.includes(\"Admin\") || user.roles.includes(\"Moderator\")){\n          return true;\n        }\n        this.toastr.error(\"You cannot enter this area\");\n      })\n    )\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Photo } from '../_models/photo';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getUsersWithRoles(){\n    return this.http.get<Partial<User[]>>(this.baseUrl + \"admin/users-with-roles\");\n  }\n\n  updateUserRoles(username: string, roles: string[]){\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {})\n  }\n\n  getPhotosForApproval(){\n    return this.http.get<Photo[]>(this.baseUrl + 'admin/photos-to-moderate');\n  }\n\n  approvePhoto(photoId: number){\n    return this.http.post(this.baseUrl + 'admin/approve-photo/' + photoId, {});\n  }\n\n  rejectPhoto(photoId: number){\n    return this.http.post(this.baseUrl + 'admin/reject-photo' + photoId, {});\n  }\n}\n","export default \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerForm.valid && register()\\\" autocomplete=\\\"off\\\">\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\n  <hr>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label\\\" style=\\\"margin-right: 10px;\\\"> I am a: </label>\\n    <label class=\\\"radio-inline\\\">\\n      <input type=\\\"radio\\\" value=\\\"male\\\" formControlName=\\\"gender\\\">Male\\n    </label>\\n    <label class=\\\"radio-inline\\\">\\n      <input type=\\\"radio\\\" value=\\\"female\\\" formControlName=\\\"gender\\\" class=\\\"ml-3\\\">Female\\n    </label>\\n  </div>\\n\\n  <app-text-input [formControl]='registerForm.controls[\\\"username\\\"]'\\n  [label]='\\\"Username\\\"' ></app-text-input>\\n\\n  <app-text-input [formControl]='registerForm.controls[\\\"knownAs\\\"]'\\n  [label]='\\\"Known as\\\"' ></app-text-input>\\n\\n  <app-date-input [formControl]='registerForm.controls[\\\"dateOfBirth\\\"]'\\n  [label]='\\\"Date of Birth\\\"' [maxDate]='maxDate' ></app-date-input>\\n\\n  <app-text-input [formControl]='registerForm.controls[\\\"city\\\"]'\\n  [label]='\\\"City\\\"' ></app-text-input>\\n\\n  <app-text-input [formControl]='registerForm.controls[\\\"country\\\"]'\\n  [label]='\\\"Country\\\"' ></app-text-input>\\n\\n  <app-text-input [formControl]='registerForm.controls[\\\"password\\\"]'\\n    [label]='\\\"Password\\\"' [type]='\\\"password\\\"' ></app-text-input>\\n\\n  <app-text-input [formControl]='registerForm.controls[\\\"confirmPassword\\\"]'\\n    [label]='\\\"Confirm Password\\\"' [type]='\\\"password\\\"'></app-text-input>\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"validationErrors.length > 0\\\">\\n      <ul class=\\\"text-danger\\\">\\n        <li *ngFor=\\\"let error of validationErrors\\\">\\n          {{error}}\\n        </li>\\n      </ul>\\n    </div>\\n\\n  <div class=\\\"form-group text-center\\\">\\n    <button [disabled]='!registerForm.valid' class=\\\"btn btn-success mr-2\\\" type=\\\"submit\\\">Register</button>\\n    <button class=\\\"btn btn-default mr-2\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n</form>\\n\\n\\n\\n\\n\";","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\nimport { User } from 'src/app/_models/user';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  users: Partial<User[]>;\n  bsModalRef: BsModalRef;\n\n  constructor(private adminService: AdminService, private modalService: BsModalService) { }\n\n  ngOnInit(): void {\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles(){\n    this.adminService.getUsersWithRoles().subscribe(users => {\n      this.users = users;\n    })\n  }\n\n  openRolesModal(user: User){\n    const config = {\n      class: \"modal-dialog-centered\",\n      initialState: {\n        user,\n        roles: this.getRolesArray(user)\n      }\n    }\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values => {  //match input in roles modal\n      const rolesToUpdate = {\n        roles: [...values.filter(el => el.checked === true).map(el => el.name)]\n      };\n      \n      if(rolesToUpdate){\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\n          user.roles = [...rolesToUpdate.roles]\n        })\n      }\n    })\n  }\n\n  private getRolesArray(user){\n    const roles = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] =[\n      {name: 'Admin', value: 'Admin'},\n      {name: 'Moderator', value: 'Moderator'},\n      {name: 'Member', value: 'Member'}\n    ];\n\n    availableRoles.forEach(role => {\n      let isMatch = false;\n      for (const userRole of userRoles){\n        if (role.name === userRole){\n          isMatch = true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n      }\n      if(!isMatch){\n        role.checked = false;\n        roles.push(role);\n      }\n    })\n    return roles;\n  }\n\n}\n","export default \"\\n<div class=\\\"text-center mt-3\\\">\\n  <h2>Your Matches - {{pagination?.totalItems}} found</h2>\\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n  <form #form=\\\"ngForm\\\" class=\\\"form-inline mb-3\\\" (ngSubmit)=\\\"loadMembers()\\\" autocomplete=\\\"off\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>Age From: </label>\\n      <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px;\\\" name=\\\"minAge\\\" [(ngModel)]=\\\"userParams.minAge\\\">\\n    </div>\\n\\n    <div class=\\\"form-group px-2\\\">\\n      <label>Age To: </label>\\n      <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px;\\\" name=\\\"maxAge\\\" [(ngModel)]=\\\"userParams.maxAge\\\">\\n    </div>\\n\\n    <div class=\\\"form-group px-2\\\">\\n      <label>Show: </label>\\n      <select name=\\\"gender\\\" style=\\\"width: 130px\\\" [(ngModel)]=\\\"userParams.gender\\\" class=\\\"form-control ml-1\\\" >\\n        <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\n          {{gender.display}}\\n        </option>\\n      </select>\\n    </div>\\n\\n    <button class=\\\"btn btn-primary ml-1\\\" type=\\\"submit\\\">Apply Filters</button>\\n    <button (click)=\\\"resetFilters()\\\" class=\\\"btn btn-info ml-1\\\" type=\\\"submit\\\">Reset Filters</button>\\n\\n    <div class=\\\"col\\\">\\n      <div class=\\\"btn-group float-right\\\">\\n      <button class=\\\"btn btn-primary\\\"\\n        type=\\\"button\\\"\\n        name=\\\"orderBy\\\"\\n        (click)=\\\"loadMembers()\\\"\\n        btnRadio=\\\"lastActive\\\"\\n        [(ngModel)]=\\\"userParams.orderBy\\\">Last Active</button>\\n\\n      <button class=\\\"btn btn-primary\\\"\\n        type=\\\"button\\\"\\n        name=\\\"orderBy\\\"\\n        (click)=\\\"loadMembers()\\\"\\n        btnRadio=\\\"created\\\"\\n        [(ngModel)]=\\\"userParams.orderBy\\\">Newest Members</button>\\n    </div>\\n    </div>\\n\\n  </form>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-2\\\" *ngFor=\\\"let member of members\\\">\\n    <app-member-card [member]=\\\"member\\\"></app-member-card>\\n  </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"pagination\\\">\\n  <pagination\\n    [boundaryLinks]=\\\"true\\\"\\n    [totalItems]=\\\"pagination.totalItems\\\"\\n    [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n    [(ngModel)]=\\\"pagination.currentPage\\\"\\n    (pageChanged)=\\\"pageChanged($event)\\\"\\n\\n    previousText=\\\"&lsaquo;\\\"\\n    nextText=\\\"&rsaquo;\\\"\\n    firstText=\\\"&laquo;\\\"\\n    lastText=\\\"&raquo;\\\">\\n  </pagination>\\n</div>\\n\\n\\n<!-- <div class=\\\"row\\\">\\n  <div class=\\\"col-2\\\">\\n    <p *ngFor=\\\"let member of members\\\">\\n      {{member.knownAs}}\\n    </p>\\n  </div>\\n</div> -->\\n\";","export default \".img-circle{\\n  max-height: 50px;\\n}\\n\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVzc2FnZXMvbWVzc2FnZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtBQUNsQiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1nLWNpcmNsZXtcbiAgbWF4LWhlaWdodDogNTBweDtcbn1cblxuXG5cblxuIl19 */\";","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { platformBrowserDynamicTesting } from '@angular/platform-browser-dynamic/testing';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Message } from 'src/app/_models/message';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit, OnDestroy {\n  @ViewChild('memberTabs', {static: true}) memberTabs: TabsetComponent;\n  member: Member;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  activeTab: TabDirective;\n  messages: Message[] = [];\n  user: User;\n\n  constructor(public presence: PresenceService, private route: ActivatedRoute,\n      private messageService: MessageService, private accountService: AccountService, private router: Router) {\n        this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n        this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n      }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.member = data.member;\n    })\n\n    this.route.queryParams.subscribe(params => {\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\n    })\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }\n    ]\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() : NgxGalleryImage[] {\n    const imageUrls = [];\n    for( const photo of this.member.photos){\n      imageUrls.push({\n        small: photo?.url,\n        medium: photo?.url,\n        large: photo?.url,\n      })\n    }\n    return imageUrls;\n  }\n\n\n  loadMessages(){\n    this.messageService.getMessageThread(this.member.username).subscribe(messages => {\n      // no pagination so dont need to get from response body\n      this.messages = messages;\n    })\n  }\n\n  selectTab(tabId: number){\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n  onTabActivated(data: TabDirective){\n    this.activeTab = data;\n    if (this.activeTab.heading === \"Messages\" && this.messages.length === 0){\n      this.messageService.createHubConnection(this.user, this.member.username)\n    } else {\n      // leave message tab\n      this.messageService.stopHubConnection();\n    }\n  }\n\n  // leave mem detail component / page\n  ngOnDestroy(): void {\n    this.messageService.stopHubConnection();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr: ToastrService){}\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe( // subscribed to automatically\n      map(user => {\n        if(user) return true;\n        this.toastr.error(\"you shall not pass\");\n      })\n    )\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Group } from '../_models/group';\nimport { Message } from '../_models/message';\nimport { User } from '../_models/user';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  baseUrl = environment.apiUrl;\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection;\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\n  messageThread$ = this.messageThreadSource.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  createHubConnection(user: User, otherUsername: string){\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\n        accessTokenFactory: () => user.token\n      })\n      .withAutomaticReconnect()\n      .build()\n\n    this.hubConnection.start().catch(error => console.log(\"[message.service.ts] createHubConnection()\", error));\n\n    this.hubConnection.on(\"ReceiveMessageThread\", messages => { // match message hub on connecteed()\n      this.messageThreadSource.next(messages);\n    })\n\n    this.hubConnection.on(\"NewMessage\", message => {\n      this.messageThread$.pipe(take(1)).subscribe(messages => {\n        this.messageThreadSource.next([...messages, message]) // new arr with added message\n      })\n    })\n\n    this.hubConnection.on(\"UpdatedGroup\", (group: Group) => {\n      // look inside message thread and mark messages as read for new connection\n      if (group.connections.some(x => x.username == otherUsername)){\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\n          messages.forEach(message => {\n            if (!message.dateRead){\n              message.dateRead = new Date(Date.now())\n            }\n          })\n          this.messageThreadSource.next([...messages]);\n        })\n      }\n    })\n  }\n\n\n\n  stopHubConnection(){\n    if (this.hubConnection){\n      this.hubConnection.stop();\n    }\n  }\n\n  getMessages(pageNumber, pageSize, container) {\n    let params = getPaginationHeaders(pageNumber, pageSize);\n\n    params = params.append('Container', container);\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\n  }\n\n  getMessageThread(username: string){\n    // paginate later\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\n  }\n\n  async sendMessage(username: string, content: string){\n    return this.hubConnection.invoke(\"SendMessage\",  {recipientUsername: username, content}) // return promise not obs\n      .catch(error => console.log(error));  // no access to error interceptor because it is not http\n  }\n\n  deleteMessage(id: number){\n    return this.http.delete(this.baseUrl + \"messages/\" + id);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9ycy9zZXJ2ZXItZXJyb3Ivc2VydmVyLWVycm9yLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Pagination } from 'src/app/_models/pagination';\nimport { User } from 'src/app/_models/user';\nimport { UserParams } from 'src/app/_models/userParams';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  // members$: Observable<Member[]>; // observable of member array\n  members: Member[];\n  pagination: Pagination;\n  userParams: UserParams;\n  user: User;\n  genderList = [{value: \"male\", display: \"Males\"}, {value: \"female\", display: \"Females\"}];\n\n  constructor(private memberService: MembersService) {\n    this.userParams = this.memberService.getUserParams();\n  }\n\n  ngOnInit() {\n    // this.members$ = this.memberService.getMembers();\n    this.loadMembers();\n  }\n\n  loadMembers(){\n    this.memberService.setUserParams(this.userParams);\n    this.memberService.getMembers(this.userParams).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n\n    })\n  }\n\n  resetFilters(){\n    this.userParams = this.memberService.resetUserParams();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any){\n    this.userParams.pageNumber = event.page;\n    this.memberService.setUserParams(this.userParams);\n    this.loadMembers();\n  }\n\n}\n","export default \".dropdown-toggle, .dropdown-item{\\n  cursor: pointer;\\n}\\n\\nimg{\\n  max-height: 50px;\\n  border: 2px solid #fff;\\n  display: inline;\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixzQkFBc0I7RUFDdEIsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL25hdi9uYXYuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kcm9wZG93bi10b2dnbGUsIC5kcm9wZG93bi1pdGVte1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmltZ3tcbiAgbWF4LWhlaWdodDogNTBweDtcbiAgYm9yZGVyOiAycHggc29saWQgI2ZmZjtcbiAgZGlzcGxheTogaW5saW5lO1xufVxuXG5cbiJdfQ== */\";","export default \"<div class=\\\"row\\\" *ngIf=\\\"member\\\">\\n  <div class=\\\"col-4\\\">\\n    <h1>Your Profile</h1>\\n  </div>\\n\\n  <div class=\\\"col-8\\\">\\n    <div class=\\\"alert alert-info\\\" *ngIf=\\\"editForm.dirty\\\" >\\n      <strong>Information: </strong> you have made changes, any unsaved changes will be lost\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-4\\\">\\n    <div class=\\\"card\\\">\\n\\n      <img src=\\\"{{member.photoUrl || './assets/user.png'}}\\\" alt=\\\"{{member.knownAs}}\\\" class=\\\"card-img-top img-tumbnail\\\">\\n\\n      <div class=\\\"card-body\\\">\\n        <div>\\n          <strong>Location:</strong>\\n          <p>{{member.city}}, {{member.country}}</p>\\n        </div>\\n\\n        <div>\\n          <strong>Age:</strong>\\n          <p>{{member.age}}</p>\\n        </div>\\n\\n        <div>\\n          <strong>Last Active:</strong>\\n          <p>{{member.lastActive | timeago}}</p>\\n        </div>\\n\\n        <div>\\n          <strong>Member Since:</strong>\\n          <p>{{member.created | date: 'dd MMM yyyy'}}</p>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"card-footer\\\">\\n        <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editForm\\\" type=\\\"submit\\\" class=\\\"btn btn-success btn-block\\\">Save Changes</button>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-8\\\">\\n    <tabset class=\\\"member-tabset\\\">\\n      <tab heading=\\\"About {{member.knownAs}}\\\">\\n\\n        <form #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateMember()\\\" id=\\\"editForm\\\">\\n          <h4 class=\\\"mt-2\\\" >Description</h4>\\n          <textarea [(ngModel)]=\\\"member.introduction\\\" name=\\\"introduction\\\" rows=\\\"6\\\" class=\\\"form-control\\\"></textarea>\\n\\n          <h4 class=\\\"mt-2\\\" >Looking for</h4>\\n          <textarea [(ngModel)]=\\\"member.lookingFor\\\" name=\\\"lookingFor\\\" rows=\\\"6\\\" class=\\\"form-control\\\"></textarea>\\n\\n          <h4 class=\\\"mt-2\\\" >Interests</h4>\\n          <textarea [(ngModel)]=\\\"member.interests\\\" name=\\\"interests\\\" rows=\\\"6\\\" class=\\\"form-control\\\"></textarea>\\n\\n          <h4 class=\\\"mt-2\\\" >Location Details</h4>\\n          <div class=\\\"form-inline\\\">\\n            <label for=\\\"city\\\">City: </label>\\n            <input [(ngModel)]=\\\"member.city\\\" type=\\\"text\\\" name=\\\"city\\\" class=\\\"form-control mx-2\\\">\\n\\n            <label for=\\\"country\\\">Country: </label>\\n            <input [(ngModel)]=\\\"member.country\\\" type=\\\"text\\\" name=\\\"country\\\" class=\\\"form-control mx-2\\\">\\n          </div>\\n        </form>\\n      </tab>\\n\\n      <tab heading=\\\"Edit Photos\\\">\\n        <app-photo-editor [member]=\\\"member\\\" ></app-photo-editor>\\n      </tab>\\n\\n    </tabset>\\n  </div>\\n</div>\\n\\n\\n\";","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from './_models/user';\nimport { AccountService } from './_services/account.service';\nimport { PresenceService } from './_services/presence.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'Dating App';\n  users: any;\n\n  constructor(private accountService: AccountService, private presence: PresenceService){}\n\n  ngOnInit() {\n    this.setCurrentUSer();\n  }\n\n  // set user in account service\n  setCurrentUSer(){\n    const user: User = JSON.parse(localStorage.getItem('user')) // undo stringified\n    if (user){\n      this.accountService.setCurrentUser(user);\n      this.presence.createHubConnection(user);  // access to token\n    }\n\n  }\n\n}\n","export default \"<div class=\\\"container\\\">\\n  <h1>Not Found</h1>\\n  <button class=\\\"btn btn-info btn-lg\\\" routerLink=\\\"/errors\\\">Return to Error Page</button>\\n  <br>\\n  <br>\\n  <button class=\\\"btn btn-info btn-lg\\\" routerLink=\\\"/\\\">Return to Home Page</button>\\n</div>\\n\";","export default \".card img {\\n  margin: 25px;\\n  width: 85%;\\n  height: 85%;\\n}\\n\\n.card-body{\\n  padding: 0 25px;\\n}\\n\\n.card-footer{\\n  padding: 10px 15px;\\n  background-color: #fff;\\n  border-top: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9tZW1iZXItZWRpdC9tZW1iZXItZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7RUFDVixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUdBO0VBQ0Usa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9tZW1iZXJzL21lbWJlci1lZGl0L21lbWJlci1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCBpbWcge1xuICBtYXJnaW46IDI1cHg7XG4gIHdpZHRoOiA4NSU7XG4gIGhlaWdodDogODUlO1xufVxuXG4uY2FyZC1ib2R5e1xuICBwYWRkaW5nOiAwIDI1cHg7XG59XG5cblxuLmNhcmQtZm9vdGVye1xuICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlci10b3A6IG5vbmU7XG59XG4iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19mb3Jtcy9kYXRlLWlucHV0L2RhdGUtaW5wdXQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-img-wrapper\\\">\\n    <img src=\\\"{{member.photoUrl || './assets/user.png'}}\\\" alt=\\\"{{member.knownAs}}\\\" class=\\\"card-img-top\\\">\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" routerLink=\\\"/members/{{member.username}}\\\">\\n        <i class=\\\"fa fa-user\\\"></i></button></li>\\n\\n        <li class=\\\"list-inline-item\\\"><button (click)=\\\"addLike(member)\\\" class=\\\"btn btn-primary\\\">\\n        <i class=\\\"fa fa-heart\\\"></i></button></li>\\n\\n        <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\"\\n          routerLink=\\\"/members/{{member.username}}\\\"\\n          [queryParams]='{tab: 3}'\\n          >\\n\\n        <i class=\\\"fa fa-envelope\\\"></i></button></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-body p-1\\\">\\n    <h6 class=\\\"card-title text-center mb-1\\\">\\n      <span [class.is-online]=\\\"(presence.onlineUsers$ | async).includes(member.username)\\\" >\\n        <i class=\\\"fa fa-user mr-2\\\"></i>\\n      </span>\\n      {{member.knownAs}}, {{member.age}}\\n\\n    </h6>\\n    <p class=\\\"card-text text-muted text-center\\\">{{member.city}}</p>\\n  </div>\\n</div>\\n\\n\\n\\n\";","export default \".card img {\\n  margin: 25px;\\n  width: 85%;\\n  height: 85%;\\n}\\n\\n.card-body{\\n  padding: 0 25px;\\n}\\n\\n.card-footer{\\n  padding: 10px 15px;\\n  background-color: #fff;\\n  border-top: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9tZW1iZXItZGV0YWlsL21lbWJlci1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7RUFDWixVQUFVO0VBQ1YsV0FBVztBQUNiOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFHQTtFQUNFLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbWVtYmVycy9tZW1iZXItZGV0YWlsL21lbWJlci1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIGltZyB7XG4gIG1hcmdpbjogMjVweDtcbiAgd2lkdGg6IDg1JTtcbiAgaGVpZ2h0OiA4NSU7XG59XG5cbi5jYXJkLWJvZHl7XG4gIHBhZGRpbmc6IDAgMjVweDtcbn1cblxuXG4uY2FyZC1mb290ZXJ7XG4gIHBhZGRpbmc6IDEwcHggMTVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLXRvcDogbm9uZTtcbn1cbiJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvbWVtYmVyLWxpc3QvbWVtYmVyLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../_services/busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private busyService: BusyService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n    return next.handle(request).pipe(\n      delay(10),\n      finalize(() => {\n        this.busyService.idle();\n      })\n    )\n  }\n}\n","export default \"<ngx-spinner>\\n  <h3>Loading...</h3>\\n</ngx-spinner>\\n\\n\\n<app-nav></app-nav>\\n\\n<div class=\\\"container\\\" style=\\\"margin-top: 100px\\\">\\n   <router-outlet></router-outlet>\\n</div>\\n\\n\";","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Member } from '../_models/member';\nimport { PaginatedResult } from '../_models/pagination';\nimport { User } from '../_models/user';\nimport { UserParams } from '../_models/userParams';\nimport { AccountService } from './account.service';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembersService {\n  baseUrl = environment.apiUrl;\n  members: Member[] =[];\n  memberCache = new Map();\n  user: User;\n  userParams: UserParams;\n\n  constructor(private http: HttpClient, private accountService: AccountService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n      this.userParams = new UserParams(user);\n    })\n   }\n\n  getUserParams(){\n    return this.userParams\n  }\n\n  setUserParams (params: UserParams) {\n    this.userParams = params\n  }\n\n  resetUserParams (){\n    this.userParams = new UserParams(this.user);\n    return this.userParams;\n  }\n\n  getMembers(userParams: UserParams){\n    // console.log(Object.values(userParams).join('-'));\n    // check cache results of query\n    var response = this.memberCache.get(Object.values(userParams).join('-')) // same key to get and set\n    if (response){\n      return of(response);\n    }\n\n    let params = getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\n\n    params = params.append(\"minAge\", userParams.minAge.toString());\n    params = params.append(\"maxAge\", userParams.maxAge.toString());\n    params = params.append(\"gender\", userParams.gender); // already string\n    params = params.append(\"orderBy\", userParams.orderBy);\n\n    return getPaginatedResult<Member[]>(this.baseUrl + 'users', params, this.http)\n      .pipe(map(response => {\n        this.memberCache.set(Object.values(userParams).join('-'), response);\n        return response;\n      }))\n  }\n\n  // could use navigation extras but member detailed resolver cannot use it\n  getMember(username: string){\n    const member = [...this.memberCache.values()]\n      .reduce((arr, el) => arr.concat(el.result), []) //previous arr, do to each element- concat new to previous arr\n      .find((member: Member) => member.username === username);\n\n    if (member) {\n      return of(member);\n    }\n\n    return this.http.get<Member>(this.baseUrl + 'users/' + username); // getting member from api\n  }\n\n  updateMember(member: Member){\n    return this.http.put(this.baseUrl + 'users', member).pipe(\n      map(() => {\n        // get member from service\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      })\n    )\n  }\n\n  setMainPhoto(photoId: number){\n    return this.http.put(this.baseUrl + \"users/set-main-photo/\" + photoId, {});\n  }\n\n  deletePhoto(photoId: number){\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\n  }\n\n  addLike(username: string){\n    return this.http.post(this.baseUrl + 'likes/' + username, {});\n  }\n\n  getLikes(predicate: string, pageNumber, pageSize){\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('predicate', predicate);\n\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl + 'likes', params, this.http);\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { SharedModule } from './_module/shared.module';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogueComponent } from './modals/confirm-dialogue/confirm-dialogue.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    TestErrorsComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputComponent,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent,\n    ConfirmDialogueComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    NgxSpinnerModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Photo } from 'src/app/_models/photo';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() member: Member;\n  uploader: FileUploader;\n  hasBaseDropzoneOver = false;\n  baseUrl = environment.apiUrl\n  user: User;\n\n  constructor(private accountService: AccountService, private memberService: MembersService) {\n    //get user out of observable\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n\n   }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n\n  // set base drop zone\n  fileOverBase(event: any){\n    this.hasBaseDropzoneOver = event;\n  }\n\n  setMainPhoto(photo: Photo){\n    this.memberService.setMainPhoto(photo.id).subscribe(()=>{\n      this.user.photoUrl = photo.url;\n      this.accountService.setCurrentUser(this.user); // update observable and photo in local storage\n      this.member.photoUrl = photo.url;\n      this.member.photos.forEach(p => {\n        if (p.isMain) p.isMain = false;\n        if (p.id == photo.id) p.isMain = true;\n      })\n    })\n  }\n\n  deletePhoto(photoId : number){\n    this.memberService.deletePhoto(photoId).subscribe(() => {\n      this.member.photos = this.member.photos.filter(x => x.id !== photoId);\n    })\n  }\n\n  initializeUploader(){\n    this.uploader = new FileUploader({\n      url: this.baseUrl + \"users/add-photo\",\n      authToken: \"Bearer \" + this.user.token,\n      isHTML5 : true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false; // already using bearer\n    }\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response){\n        const photo: Photo = JSON.parse(response);\n        this.member.photos.push(photo);\n        if(photo.isMain){\n          this.user.photoUrl = photo.url,\n          this.member.photoUrl = photo.url,\n          this.accountService.setCurrentUser(this.user); // upate img everywehre\n        }\n      }\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { Member } from \"../_models/member\";\nimport { MembersService } from \"../_services/members.service\";\n\n@Injectable({  // not a component\n  providedIn: 'root'\n})\nexport class MemberDetailedResolver implements Resolve<Member>{\n\n  constructor(private membersService: MembersService){}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Member> {\n    return this.membersService.getMember(route.paramMap.get('username'));\n  }\n\n}\n\n\n\n","export default \"img.img-thumbnail{\\n  height: 100px;\\n  min-width: 100px !important;\\n  margin-bottom: 2px;\\n}\\n\\n.nv-file-over{\\n  border: dotted 3px red;\\n}\\n\\ninput[type=file]{\\n  color: transparent;\\n}\\n\\n.not-approved{\\n  opacity: 0.2;\\n}\\n\\n.img-wrapper{\\n  position: relative;\\n}\\n\\n.img-text{\\n  position: absolute;\\n  bottom: 45%;\\n  left: 5%\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9waG90by1lZGl0b3IvcGhvdG8tZWRpdG9yLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsMkJBQTJCO0VBQzNCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1g7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvcGhvdG8tZWRpdG9yL3Bob3RvLWVkaXRvci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW1nLmltZy10aHVtYm5haWx7XG4gIGhlaWdodDogMTAwcHg7XG4gIG1pbi13aWR0aDogMTAwcHggIWltcG9ydGFudDtcbiAgbWFyZ2luLWJvdHRvbTogMnB4O1xufVxuXG4ubnYtZmlsZS1vdmVye1xuICBib3JkZXI6IGRvdHRlZCAzcHggcmVkO1xufVxuXG5pbnB1dFt0eXBlPWZpbGVde1xuICBjb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi5ub3QtYXBwcm92ZWR7XG4gIG9wYWNpdHk6IDAuMjtcbn1cblxuLmltZy13cmFwcGVye1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5pbWctdGV4dHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDQ1JTtcbiAgbGVmdDogNSVcbn1cblxuIl19 */\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialogue',\n  templateUrl: './confirm-dialogue.component.html',\n  styleUrls: ['./confirm-dialogue.component.css']\n})\nexport class ConfirmDialogueComponent implements OnInit {\n  title: string;\n  message: string;\n  btnOkText: string;\n  btnCancelText: string;\n  result: boolean; // cont or cancel\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  confirm(){\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n\n  decline(){\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9yb2xlcy1tb2RhbC9yb2xlcy1tb2RhbC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() type = 'text';\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n   }\n\n  writeValue(obj: any): void {\n\n  }\n  registerOnChange(fn: any): void {\n\n  }\n  registerOnTouched(fn: any): void {\n\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\nimport { Pagination } from '../_models/pagination';\nimport { MembersService } from '../_services/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  members: Partial<Member[]>;\n  predicate = 'liked';\n  pageNumber = 1;\n  pageSize = 5;\n  pagination: Pagination;\n\n  constructor(private memberService: MembersService) { }\n\n  ngOnInit() {\n    this.loadLikes()\n  }\n\n  loadLikes(){\n    this.memberService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    })\n  }\n\n  pageChanged(event: any){\n    this.pageNumber = event.page;\n    this.loadLikes();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLXBhbmVsL2FkbWluLXBhbmVsLmNvbXBvbmVudC5jc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerConfig, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right'\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot()\n  ],\n  exports:[\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  // store input info\n  model: any = {}\n\n  constructor(\n    public accountService: AccountService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  login(){\n    // console.log(\"[nav.component.ts login()]\",this.model)\n    this.accountService.login(this.model).subscribe(response => {\n      console.log(\"[nav.components.ts] accountservice.login()\",response);\n      this.router.navigateByUrl('members');\n    })\n  }\n\n  logout(){\n    this.accountService.logout();\n    this.router.navigateByUrl('/');\n  }\n\n}\n","export default \"<nav class=\\\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\">Dating App</a>\\n    <!-- <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#navbarCollapse\\\" aria-controls=\\\"navbarCollapse\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarCollapse\\\"> -->\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <ng-container *ngIf=\\\"accountService.currentUser$ | async\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/members\\\" routerLinkActive=\\\"active\\\">Matches</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/lists\\\" routerLinkActive=\\\"active\\\">Likes</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/messages\\\" routerLinkActive=\\\"active\\\">Messages</a>\\n          </li>\\n          <li class=\\\"nav-item\\\" *appHasRole=\\\"['Admin', 'Moderator']\\\" >\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/admin\\\" routerLinkActive=\\\"active\\\">Admin</a>\\n          </li>\\n        </ng-container>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/errors\\\" routerLinkActive=\\\"active\\\">Errors</a>\\n        </li>\\n      </ul>\\n\\n      <div class=\\\"dropdown\\\" *ngIf=\\\"(accountService.currentUser$ | async) as user\\\" dropdown>\\n        <img src=\\\"{{user.photoUrl || './assets/user.png'}}\\\" alt=\\\"{{user.username}}\\\">\\n        <a class=\\\"dropdown-toggle text-light ml-2\\\" dropdownToggle>Welcome {{user.knownAs || user.username | titlecase}}</a>\\n        <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/member/edit\\\">Edit Profile</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </div>\\n      </div>\\n\\n      <form #loginForm=\\\"ngForm\\\" *ngIf=\\\"(accountService.currentUser$ | async) === null\\\"  class=\\\"form-inline mt-2 mt-md-0\\\" (ngSubmit)=\\\"login()\\\" autocomplete=\\\"off\\\">\\n        <input\\n          name=\\\"username\\\"\\n          [(ngModel)]=\\\"model.username\\\"\\n\\n          class=\\\"form-control mr-sm-2\\\"\\n          type=\\\"text\\\"\\n          placeholder=\\\"Username\\\" >\\n        <input\\n          name=\\\"password\\\"\\n          [(ngModel)]=\\\"model.password\\\"\\n\\n          class=\\\"form-control mr-sm-2\\\"\\n          type=\\\"password\\\"\\n          placeholder=\\\"Password\\\" >\\n        <button class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\n      </form>\\n    </div>\\n  <!-- </div> -->\\n</nav>\\n\\n\";","import { Component, Input, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() member: Member;\n\n  constructor(private memberService: MembersService, private toastr: ToastrService, public presence: PresenceService) { }\n\n  ngOnInit(): void {\n  }\n\n  addLike(member: Member){\n    this.memberService.addLike(member.username).subscribe(() => {\n      this.toastr.success(\"you have liked \" + member.knownAs);\n    })// interceptor handles error\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { userInfo } from 'os';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\n  hubUrl = environment.hubUrl\n  private hubConnection: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toastr: ToastrService, private router: Router) { }\n\n  createHubConnection(user: User){\n\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'presence', {\n        accessTokenFactory: () => user.token\n      })\n      .withAutomaticReconnect() //network problem\n      .build()\n\n    this.hubConnection\n      .start()\n      .catch(error => console.log(\"[presence.service.ts] createHubConnection()\", error));\n\n    this.hubConnection.on(\"UserIsOnline\", username => {   // method names must match in presenceHub.cs\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames, username])\n      })\n    })\n\n    this.hubConnection.on(\"UserIsOffline\", username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames.filter(x => x !== username)]);\n      })\n    })\n\n    this.hubConnection.on(\"GetOnlineUsers\", (usernames: string[]) => {\n      this.onlineUsersSource.next(usernames);\n    })\n\n    this.hubConnection.on(\"NewMessageReceived\", ({username, knownAs}) => {\n      this.toastr.info(knownAs + \" has sent you a new message!\")\n        .onTap\n        .pipe(take(1))\n        .subscribe(() => this.router.navigateByUrl('/members/' + username + '?tab=3'));\n    })\n\n  }\n\n  stopHubConnection(){\n    this.hubConnection.stop().catch(error => console.log(\"[presence.service.ts] stopHubConnection()\",error));\n  }\n\n\n}\n","export default \"<div class=\\\"form-group\\\">\\n  <input\\n    [class.is-invalid]=\\\"ngControl.touched && ngControl.invalid\\\"\\n    type=\\\"{{type}}\\\"\\n    class=\\\"form-control\\\"\\n    name=\\\"password\\\"\\n    [formControl]=\\\"ngControl.control\\\"\\n    placeholder=\\\"{{label}}\\\">\\n\\n  <div *ngIf=\\\"ngControl.control.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n    Please enter a {{label}}</div>\\n\\n  <div *ngIf=\\\"ngControl.control.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n    {{label}} msut be at least {{ngControl.control.errors.minlength['requiredLength']}} characters</div>\\n\\n  <div *ngIf=\\\"ngControl.control.errors?.maxlength\\\" class=\\\"invalid-feedback\\\">\\n    {{label}} must be at most {{ngControl.control.errors.maxlength['requiredLength']}} characters</div>\\n\\n  <div *ngIf=\\\"ngControl.control.errors?.isMatching\\\" class=\\\"invalid-feedback\\\">\\n    Passwords do not match</div>\\n\\n\\n</div>\\n\";","import { User } from \"./user\";\n\nexport class UserParams{\n  gender: string;\n  minAge = 18;\n  maxAge = 99;\n  pageNumber = 1;\n  pageSize = 5;\n  orderBy = 'lastActive';\n\n  constructor(user: User){\n    this.gender = user.gender === \"female\" ? \"male\" : \"female\";\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3VzZXItbWFuYWdlbWVudC91c2VyLW1hbmFnZW1lbnQuY29tcG9uZW50LmNzcyJ9 */\";","export default \".card:hover img{\\n  transform: scale(1.1, 1.1);\\n  transition-duration: 500ms;\\n  transition-timing-function: ease-out;\\n  opacity: 0.7;\\n}\\n\\n.card img{\\n  transform: scale(1.0, 1.0);\\n  transition-duration: 500ms;\\n  transition-timing-function: ease-out;\\n}\\n\\n.card-img-wrapper{\\n  overflow: hidden;\\n  position: relative;\\n}\\n\\n.member-icons{\\n  position: absolute;\\n  bottom: -30%;\\n  left: 0%;\\n  right: 0%;\\n  margin-right: auto;\\n  margin-left: auto;\\n  opacity: 0;\\n}\\n\\n.card-img-wrapper:hover .member-icons{\\n  bottom: 0%;\\n  opacity: 1;\\n}\\n\\n.animate{\\n  transition: all 0.3 ease-in-out;\\n}\\n\\n@-webkit-keyframes fa-blink{\\n  0% {opacity: 1;}\\n  100% {opacity: 0.4;}\\n}\\n\\n@keyframes fa-blink{\\n  0% {opacity: 1;}\\n  100% {opacity: 0.4;}\\n}\\n\\n.is-online{\\n  -webkit-animation: fa-blink 1.5s linear infinite;\\n          animation: fa-blink 1.5s linear infinite;\\n  color: rgb(1, 189, 42);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9tZW1iZXItY2FyZC9tZW1iZXItY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsMEJBQTBCO0VBQzFCLDBCQUEwQjtFQUMxQixvQ0FBb0M7RUFDcEMsWUFBWTtBQUNkOztBQUVBO0VBQ0UsMEJBQTBCO0VBQzFCLDBCQUEwQjtFQUMxQixvQ0FBb0M7QUFDdEM7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixRQUFRO0VBQ1IsU0FBUztFQUNULGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsVUFBVTtBQUNaOztBQUVBO0VBQ0UsVUFBVTtFQUNWLFVBQVU7QUFDWjs7QUFFQTtFQUNFLCtCQUErQjtBQUNqQzs7QUFFQTtFQUNFLElBQUksVUFBVSxDQUFDO0VBQ2YsTUFBTSxZQUFZLENBQUM7QUFDckI7O0FBSEE7RUFDRSxJQUFJLFVBQVUsQ0FBQztFQUNmLE1BQU0sWUFBWSxDQUFDO0FBQ3JCOztBQUVBO0VBQ0UsZ0RBQXdDO1VBQXhDLHdDQUF3QztFQUN4QyxzQkFBc0I7QUFDeEIiLCJmaWxlIjoic3JjL2FwcC9tZW1iZXJzL21lbWJlci1jYXJkL21lbWJlci1jYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZDpob3ZlciBpbWd7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4xLCAxLjEpO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xuICBvcGFjaXR5OiAwLjc7XG59XG5cbi5jYXJkIGltZ3tcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjAsIDEuMCk7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG59XG5cbi5jYXJkLWltZy13cmFwcGVye1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5tZW1iZXItaWNvbnN7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAtMzAlO1xuICBsZWZ0OiAwJTtcbiAgcmlnaHQ6IDAlO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBvcGFjaXR5OiAwO1xufVxuXG4uY2FyZC1pbWctd3JhcHBlcjpob3ZlciAubWVtYmVyLWljb25ze1xuICBib3R0b206IDAlO1xuICBvcGFjaXR5OiAxO1xufVxuXG4uYW5pbWF0ZXtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMyBlYXNlLWluLW91dDtcbn1cblxuQGtleWZyYW1lcyBmYS1ibGlua3tcbiAgMCUge29wYWNpdHk6IDE7fVxuICAxMDAlIHtvcGFjaXR5OiAwLjQ7fVxufVxuXG4uaXMtb25saW5le1xuICBhbmltYXRpb246IGZhLWJsaW5rIDEuNXMgbGluZWFyIGluZmluaXRlO1xuICBjb2xvcjogcmdiKDEsIDE4OSwgNDIpO1xufVxuIl19 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"<div class=\\\"form-group\\\">\\n  <input\\n    type='text'\\n    [class.is-invalid]='ngControl.touched && ngControl.invalid'\\n    class='form-control'\\n    [formControl]='ngControl.control'\\n    placeholder=\\\"{{label}}\\\"\\n    bsDatepicker\\n    [bsConfig]='bsConfig'\\n    [maxDate]='maxDate'\\n   >\\n   <div *ngIf=\\\"ngControl.control.errors?.required\\\" class=\\\"invalid-feedback\\\">{{label}} is required</div>\\n</div>\\n\\n\\n\\n\";","export default \"<div class=\\\"row mb-4\\\">\\n  <div class=\\\"btn-group\\\" name=\\\"container\\\">\\n\\n    <button class=\\\"btn btn-primary\\\" btnRadio=\\\"Unread\\\" (click)=\\\"loadMessages()\\\" [(ngModel)]=\\\"container\\\">\\n      <i class=\\\"fa fa-envelope\\\"></i> Unread\\n    </button>\\n\\n    <button class=\\\"btn btn-primary\\\" btnRadio=\\\"Inbox\\\" (click)=\\\"loadMessages()\\\" [(ngModel)]=\\\"container\\\">\\n      <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\n    </button>\\n\\n    <button class=\\\"btn btn-primary\\\" btnRadio=\\\"Outbox\\\" (click)=\\\"loadMessages()\\\" [(ngModel)]=\\\"container\\\">\\n      <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\n    </button>\\n\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"messages?.length === 0\\\" >\\n  <h3>No Messages</h3>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"messages?.length > 0\\\" >\\n  <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\" >\\n    <tr>\\n      <th style=\\\"width: 40%\\\">Message</th>\\n      <th style=\\\"width: 20%\\\">From / To</th>\\n      <th style=\\\"width: 20%\\\">Sent / Received</th>\\n      <th style=\\\"width: 20%\\\"></th>\\n    </tr>\\n    <tr [hidden]=\\\"loading\\\" *ngFor=\\\"let message of messages\\\"\\n      routerLink=\\\"{{container === 'Outbox'\\n          ? '/members/' + message.recipientUsername\\n          : '/members/' + message.senderUsername}}\\\" [queryParams]='{tab: 3}' >\\n        <td>{{message.content}}</td>\\n        <td>\\n          <div *ngIf=\\\"container === 'Outbox'\\\" >\\n            <img\\n            class=\\\"img-circle rounded-circle mr-2\\\"\\n            src=\\\"{{message.recipientPhotoUrl || './assets/user.png'}}\\\"\\n            alt=\\\"{{message.recipientUsername}}\\\">\\n\\n            <strong>{{message.recipientUsername | titlecase}}</strong>\\n          </div>\\n\\n          <div *ngIf=\\\"container !== 'Outbox'\\\" >\\n            <img\\n            class=\\\"img-circle rounded-circle mr-2\\\"\\n            src=\\\"{{message.senderPhotoUrl || './assets/user.png'}}\\\"\\n            alt=\\\"{{message.senderUsername}}\\\">\\n\\n            <strong>{{message.senderUsername | titlecase}}</strong>\\n          </div>\\n        </td>\\n\\n        <td>{{message.messageSent | timeago}}</td>\\n        <td>\\n          <button\\n            (click)=\\\"$event.stopPropagation()\\\"  \\n            (click)=\\\"deleteMessage(message.id)\\\"\\n            class=\\\"btn btn-danger\\\">Delete</button>\\n        </td>\\n      </tr>\\n  </table>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"pagination && !loading\\\">\\n  <pagination\\n    [boundaryLinks]=\\\"true\\\"\\n    [totalItems]=\\\"pagination.totalItems\\\"\\n    [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n    [(ngModel)]=\\\"pagination.currentPage\\\"\\n    (pageChanged)=\\\"pageChanged($event)\\\"\\n\\n    previousText=\\\"&lsaquo;\\\"\\n    nextText=\\\"&rsaquo;\\\"\\n    firstText=\\\"&laquo;\\\"\\n    lastText=\\\"&raquo;\\\">\\n  </pagination>\\n</div>\\n\";","export default \"<div class=\\\"row\\\"  >\\n  <div class=\\\"col-4\\\">\\n    <div class=\\\"card\\\">\\n\\n      <img src=\\\"{{member.photoUrl || './assets/user.png'}}\\\" alt=\\\"{{member.knownAs}}\\\" class=\\\"card-img-top img-tumbnail\\\">\\n\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"mb-2\\\" *ngIf=\\\"(presence.onlineUsers$ | async).includes(member.username)\\\" >\\n          <i class=\\\"fa fa-user-circle text-success\\\"></i> Online now\\n        </div>\\n\\n\\n        <div>\\n          <strong>Location:</strong>\\n          <p>{{member.city}}, {{member.country}}</p>\\n        </div>\\n\\n        <div>\\n          <strong>Age:</strong>\\n          <p>{{member.age}}</p>\\n        </div>\\n\\n        <div>\\n          <strong>Last Active:</strong>\\n          <p>{{member.lastActive | timeago}}</p>\\n        </div>\\n\\n        <div>\\n          <strong>Member Since:</strong>\\n          <p>{{member.created | date: 'dd MMM yyyy'}}</p>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"card-footer\\\">\\n        <div class=\\\"btn-group d-flex\\\">\\n          <button class=\\\"btn btn-primary\\\">\\n            Like</button>\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"selectTab(3)\\\" >\\n            Message</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-8\\\">\\n    <tabset class=\\\"member-tabset\\\" #memberTabs>\\n      <tab heading=\\\"About {{member.knownAs}}\\\" (selectTab)=\\\"onTabActivated($event)\\\" >\\n        <h4>Description</h4>\\n        <p>{{member.introduction}}</p>\\n        <h4>Looking for</h4>\\n        <p>{{member.lookingFor}}</p>\\n      </tab>\\n\\n      <tab heading=\\\"Interests\\\" (selectTab)=\\\"onTabActivated($event)\\\" >\\n        <h4>Interests</h4>\\n        <p>{{member.interests}}</p>\\n      </tab>\\n\\n      <tab heading=\\\"Photos\\\" (selectTab)=\\\"onTabActivated($event)\\\" >\\n        <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\" style=\\\"display: inline-block; margin-bottom: 20px;\\\"></ngx-gallery>\\n      </tab>\\n\\n      <tab heading=\\\"Messages\\\" (selectTab)=\\\"onTabActivated($event)\\\" >\\n        <app-member-messages [username]=\\\"member.username\\\"></app-member-messages>\\n      </tab>\\n    </tabset>\\n  </div>\\n</div>\\n\\n\\n\";","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Toast, ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm:NgForm;\n  member: Member;\n  user: User;\n  @HostListener(\"window:beforeunload\", [\"$event\"]) unloadNotification($event: any){\n    if(this.editForm.dirty){\n      $event.returnValue = true;\n    }\n  }\n\n  constructor( private accountService: AccountService, private memberService:MembersService, private toastr: ToastrService) {\n    // current user is observable, need to access obj inside\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n  }\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n\n  loadMember(){\n    this.memberService.getMember(this.user.username).subscribe(member => {\n      this.member = member;\n    })\n  }\n\n  updateMember(){\n    this.memberService.updateMember(this.member).subscribe(() => {\n      this.toastr.success(\"Profile updated successfully\");\n      this.editForm.reset(this.member);\n    })\n  }\n\n}\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport { PaginatedResult } from \"../_models/pagination\";\n\n\n\nexport function getPaginatedResult<T>(url, params, http: HttpClient) {\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\n\n  return http.get<T>(url, { observe: \"response\", params }).pipe(\n    map(response => {\n      paginatedResult.result = response.body;\n      if (response.headers.get(\"Pagination\") !== null) {\n        paginatedResult.pagination = JSON.parse(response.headers.get(\"Pagination\"));\n      };\n      return paginatedResult;\n    })\n  );\n}\n\nexport function getPaginationHeaders(pageNumber: number, pageSize: number){\n  let params = new HttpParams();\n\n  params = params.append(\"pageNumber\", pageNumber.toString());\n  params = params.append(\"pageSize\", pageSize.toString());\n\n  return params;\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\nimport { ConfirmService } from '../_services/confirm.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n\n  constructor(private confirmService: ConfirmService){}\n\n  canDeactivate(\n    component: MemberEditComponent): Observable<boolean> | boolean {   //access to member form for change status\n    if(component.editForm.dirty){\n      return this.confirmService.confirm() // observable, auto subscribe\n    }\n\n    return true;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AdminGuard } from './_guards/admin.guard';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {\n    path:'',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children:[\n      {path: 'members', component: MemberListComponent},\n      {path: 'members/:username', component: MemberDetailComponent, resolve: {member: MemberDetailedResolver}},\n      {path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChangesGuard]},\n      {path: 'lists', component: ListsComponent},\n      {path: 'messages', component: MessagesComponent},\n      {path: 'admin', component: AdminPanelComponent, canActivate: [AdminGuard]},\n    ]\n  },\n  {path: 'errors', component: TestErrorsComponent},\n  {path: 'not-found', component: NotFoundComponent},\n  {path: 'server-error', component: ServerErrorComponent},\n  {path: '**', component: NotFoundComponent, pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { ConfirmDialogueComponent } from '../modals/confirm-dialogue/confirm-dialogue.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmService {\n  bsModelRef: BsModalRef;\n\n  constructor(private modalService: BsModalService) { }\n\n  confirm(title = \"Confirmation\", message = \"Are you sure you want to do this?\",\n    btnOkText = \"Ok\", btnCancelText = \"Cancel\"): Observable<boolean> {\n      const config = {\n        initialState: {\n          title,\n          message,\n          btnOkText,\n          btnCancelText\n        }\n      }\n    this.bsModelRef = this.modalService.show(ConfirmDialogueComponent, config);\n    return new Observable<boolean>(this.getResult());\n\n  }\n  private getResult(){\n    return (observer) => {\n      const subscription = this.bsModelRef.onHidden.subscribe(() => {\n        observer.next(this.bsModelRef.content.result);\n        observer.complete();\n      });\n\n      return {\n        unsubscribe(){\n          subscription.unsubscribe();\n        }\n      }\n    }\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css']\n})\nexport class RolesModalComponent implements OnInit {\n @Input() updateSelectedRoles = new EventEmitter();\n user: User;\n roles: any[];\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  updateRoles(){\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3RzL2xpc3RzLmNvbXBvbmVudC5jc3MifQ== */\";"],"sourceRoot":"webpack:///"}